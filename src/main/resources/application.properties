server.port=8080
# http://localhost:8080/h2-console/
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# Datasource properties (H2)
spring.datasource.url=jdbc:h2:mem:quickclick
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=post
spring.datasource.password=post
# Datasource properties (postgres)
#spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=post

# JPA properties
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate

# Flyway properties (H2)
spring.flyway.locations=classpath:db/migration/h2
# Flyway properties (postgres)
#spring.flyway.locations=classpath:db/migration/postgres
# Flyway other settings
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}

#Logging properties
logging.level.org.springframework=info
logging.level.quick.click=debug

# thymeLeaf
spring.thymeleaf.enabled=true

#security
app.auth.tokenSecret=04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
app.auth.tokenExpirationMsec=864000000
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris[0]=http://localhost:3000/oauth2/redirect
#app.oauth2.authorizedRedirectUris[1]=myandroidapp://oauth2/redirect
#app.oauth2.authorizedRedirectUris[2]=myiosapp://oauth2/redirect

spring.security.oauth2.client.registration.google.clientId=5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=tWZKVLxaD_ARWsriiiUFYoIk
spring.security.oauth2.client.registration.google.redirectUri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
